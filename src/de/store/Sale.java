/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.store;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.Properties;


/**
 *
 * @author Administrator
 */
public class Sale extends javax.swing.JFrame {

 class OrderItem {
    String productName;
    int quantity;
    double price;
}

List<OrderItem> orderItems = new ArrayList<>();

    /**
     * Creates new form Sale
     */
    public Sale() {
        initComponents();
  //      loadcategory();
    }
            public void loadcategory()
    {
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
               conn = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/de-store?zeroDateTimeBehavior=convertToNull","root","");
             Statement stmt= (Statement)conn.createStatement();
                ResultSet rs;
                rs=stmt.executeQuery("Select * from warehouse");
                while(rs.next())
                {
                    String r=rs.getString(2);
                    jTextField4.add(r, this);
                }   
            }
                catch(ClassNotFoundException | SQLException | NumberFormatException | HeadlessException e)
                        {
                        System.out.println("Error:" + e.getMessage());
                        }
                
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DE-STORE");
        setBounds(new java.awt.Rectangle(550, 200, 0, 0));

        jPanel1.setBackground(new java.awt.Color(153, 230, 198));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SALE!!!!!");

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Store Card");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel2.setText("Product ID");

        jLabel3.setText("Product Name");

        jLabel4.setText("Quantity");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Check Offer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Offer Is Here");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Click on Check Offer");

        jButton4.setText("Buy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Press Enter after filling the product name for get the product id");

        jLabel8.setText("Price per unit");

        jLabel9.setText("0.0");

        jLabel10.setText("Total price");

        jLabel11.setText("0.0");

        jLabel12.setText("Customer Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel12)
                    .addComponent(jLabel10))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1)
                            .addComponent(jTextField4)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addGap(57, 57, 57))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        String name= jTextField4.getText();
       // String id =jComboBox1.getSelectedItem().toString();
         String id=jTextField1.getText();
      int quantity = Integer.parseInt(jTextField2.getText());
  String offer_name= jLabel6.getText();
      int price = Integer.parseInt(jLabel9.getText());
 
        
        OrderItem orderItem = new OrderItem();
         orderItem.productName = name;
         orderItem.quantity = quantity;
         orderItem.price = price;

         orderItems.add(orderItem);
         float totalPrice = 0;
         for (OrderItem item : orderItems) {
            totalPrice = (float) (item.price*quantity);
            }

// Display the total price in the total price field on your form
jLabel11.setText(String.valueOf(totalPrice));
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
       new Store_card().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   String productName = jTextField4.getText();
    String offer_name = "";
        try {
           offer_name = retrieveOfferInfoFromDatabase(productName);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
        }
  jLabel6.setText(offer_name);
         
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
private String retrieveOfferInfoFromDatabase(String productName) throws ClassNotFoundException, SQLException {
     Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
               conn = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/de-store?zeroDateTimeBehavior=convertToNull","root","");
  String Offer_name = "";
    try {
        String query = "SELECT Offer_name FROM offer_product WHERE Product_name = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, productName);
        ResultSet resultSet = pstmt.executeQuery();
        if (resultSet.next()) {
             Offer_name = resultSet.getString("Offer_name");
       
          String  offerInfo = "Discount: " + Offer_name + "\n";
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return Offer_name;
}

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
   String productName = jTextField4.getText();
    String productID = "";
     String price="";
    try {
            productID = retrieveProductIDFromDatabase(productName);
            price=retrievepriceFromDatabase(productName);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
        }
   jTextField1.setText(productID);
  jLabel9.setText(price);       
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed
private String retrieveProductIDFromDatabase(String productName) throws ClassNotFoundException, SQLException {
           Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
               conn = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/de-store?zeroDateTimeBehavior=convertToNull","root","");
        String productID = "";
    try {
        String query = "SELECT Product_id FROM warehouse WHERE Product_name = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, productName);
        ResultSet resultSet = pstmt.executeQuery();
        if (resultSet.next()) {
            productID = resultSet.getString("Product_id");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return productID;
}
private String retrievepriceFromDatabase(String productName) throws ClassNotFoundException, SQLException {
           Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
               conn = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/de-store?zeroDateTimeBehavior=convertToNull","root","");
        String price = "";
    try {
        String query = "SELECT price FROM price_control WHERE Product_name = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, productName);
        ResultSet resultSet = pstmt.executeQuery();
        if (resultSet.next()) {
            price = resultSet.getString("price");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return price;
}

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String name= jTextField4.getText();
       // String id =jComboBox1.getSelectedItem().toString();
         String id=jTextField1.getText();
      int quantity = Integer.parseInt(jTextField2.getText());
  String offer_name= jLabel6.getText();
      String price = jLabel9.getText();
      float total_price = Float.parseFloat(jLabel11.getText());
        String cus_name= jTextField3.getText();
     
        
         if(name.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Name Cannot be Empty", "DE-STORE", 1);
        }
        else if(id.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Please Select ID", "DE-STORE", 1);
        }
       
        else if(cus_name.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Customer Name Cannot be Empty", "DE-STORE", 1);
        }
        else
        {
        
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn;
                conn = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/de-store?zeroDateTimeBehavior=convertToNull","root","");
                Statement stmt= (Statement)conn.createStatement();
                ResultSet rs;
                rs=stmt.executeQuery("Select * from warehouse where Product_id='" + id+"'");
                int oldquantity = 0;
                while(rs.next())
                {
                   oldquantity=Integer.parseInt(rs.getString(5));
                
                }
                if(oldquantity<5)
                {
                       JOptionPane.showMessageDialog(this,"Sorry, We Dont Have Enough Stock: "+oldquantity,"DE-STORE",1);
             
                 String to = "souravverma1582000@gmail.com";
                  String subject = "Inventory Alert";
                   String message = "Product "+name+ " is going to out of stock with "+oldquantity+ " stock. Please try to "
                           + "refill ASAP."
                           + "\n\nThank you"
                           + "\nTeam DE-Store";

                  sendEmail(to, subject, message);
                     
                }
                else if(oldquantity>quantity)
                {
                int executeUpdate;
                executeUpdate = stmt.executeUpdate("INSERT INTO Sale(Product_name,Product_id,quantity,Offer_name,Total_price,Customer_name) VALUES('"+name+"','"+id+"','"+quantity+"','"+offer_name+"','"+total_price+"','"+cus_name+"');" );
                int newquantity=0;
               newquantity = oldquantity-quantity;
                executeUpdate = stmt.executeUpdate("update warehouse set quantity='"+newquantity+"' where Product_id='" + id + "'");
                
                JOptionPane.showMessageDialog(this,"SALE Information Saved ","DE-STORE",1);
                clearAllTextFields();
                }
                
          /*      else if(oldquantity<quantity)
                {
                JOptionPane.showMessageDialog(this,"Sorry we dont have enough stock", "DE-STORE",1);
                
                }
                
            */    
                // TODO add your handling code here:
            }
            catch(ClassNotFoundException | SQLException | NumberFormatException | HeadlessException e){
                System.out.println("It is not working" + e.getMessage());
            } catch (MessagingException ex) {
                Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
private void clearAllTextFields() {
            jTextField1.setText("");
        jTextField2.setText("");
      jTextField3.setText("");
      jTextField4.setText("");
        jLabel6.setText("");
        jLabel9.setText("");
        jLabel11.setText("");
// Clear more text fields as needed
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     dispose();
      new Welcome().setVisible(true);// TODO add your handling code here:
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
  
       public static void sendEmail(String to, String subject, String message) throws MessagingException {
  
    final String username = "rohitverma37380@gmail.com";
        final String password = "Rohit37380**";

        Properties properties = new Properties();
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.socketFactory.port","465");
        properties.put("mail.smtp.socketFactory.class",
                "javax.net.ssl.SSLSocketFactory");
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.ssl.trust","smtp.gmail.com");
        properties.setProperty("mail.smtp.ssl.enable","smtp.gmail.com");
       
        Session session = Session.getInstance(properties, new Authenticator() {
           @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, "ubokmcfwspbyxtdz");
            }
        });

        try {
            Message emailMessage = new MimeMessage(session);
            emailMessage.setFrom(new InternetAddress(username));
            emailMessage.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            emailMessage.setSubject(subject);
            emailMessage.setText(message);
Transport transport= session.getTransport("smtp");
transport.connect("smtp.gmail.com",username,"ubokmcfwspbyxtdz");
transport.sendMessage(emailMessage, emailMessage.getAllRecipients());
transport.close();
            System.out.println("Email sent successfully.");
        } 
           catch (MessagingException ex) {
         Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
     }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
